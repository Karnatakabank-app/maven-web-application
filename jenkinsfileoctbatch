node{

try{
def mavenHome = tool name: 'maven3.8.7'
echo "The Job Name Is: ${env.JOB_NAME}"
echo "The Build Number Is: ${env.Build_NUMBER}"
echo "The Nod Name Is: ${env.NOD_NAME}"
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
//Checkout Code State 
stage('CheckoutCode'){
git credentialsId: 'cb50faef-e5e6-459e-b132-5fd89da40eb7', 
url: 'https://github.com/Karnatakabank-app/maven-web-application.git'
}
//Build
stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}
//Execute SonarQube Report
stage('ExecuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn sonar:sonar"
}

//UploadArtifacts Into Nexus
stage('UploadArtifactsIntoNexus'){
sh "${mavenHome}/bin/mvn deploy"
}

//Deploy App to the Tomcat Server
stage('DeployApp'){
sshagent(['8d00c1d0-2ce3-435f-8abf-6b287caf87c6']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.42.45:/opt/apache-tomcat-9.0.71/webapps"
}
}
}//try closing
catch(e){
currentBuild.result = 'FAILURE'
}
finally{
sendSlackNotification(currentBuild.result)

}//node closing

//Function for slack notification

def sendSlackNotifications(String buildStatus = 'STARTED') {
    // Build status of null means success.
    buildStatus = buildStatus ?: 'SUCCESS'

    //Default values
	def colorName = 'Red'
	def colorCode = '#FF0000'
	def subject = "${BuildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
	def summary = "${subject} (${env.BUILD_URL})"
	
	//Override default values based on build status

    if (buildStatus == 'STARTED') {
        colorName = 'YELLOW'
	    colorCode = '#FFFF00'
    } else if (buildStatus == 'SUCCESS') {
        colorName = 'GREEN'
	    colorCode = '#00FF00'
    } else {
        colorName = 'Red'
	    colorCode = '#FF0000'
    }

    //send notification

    slackSend(color: colorCode, message: summary)
    }
